webpackJsonp([6,11],{1396:function(e,t,n){"use strict";var i=n(0),o=n(5),r=n(664),s=(n.n(r),n(321)),a=n(1411),l=n(1412),c=n(1440);n.d(t,"AuthModule",function(){return f});var d=this&&this.__decorate||function(e,t,n,i){var o,r=arguments.length,s=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(r<3?o(s):r>3?o(t,n,s):o(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},u=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(){}return e=d([n.i(i.NgModule)({imports:[c.a,s.a,o.FormsModule,r.CustomFormsModule,o.ReactiveFormsModule],declarations:[a.a,l.a]}),u("design:paramtypes",[])],e)}()},1411:function(e,t,n){"use strict";var i=n(84),o=n(18),r=n(0),s=n(31),a=n(5),l=n(156),c=n(328),d=n(120);n.d(t,"a",function(){return p});var u=this&&this.__decorate||function(e,t,n,i){var o,r=arguments.length,s=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(r<3?o(s):r>3?o(t,n,s):o(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},f=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},p=function(){function e(e,t,n,o){var r=this;this.fb=e,this.store=t,this.router=n,this.toastyService=o,this.authStatus$=this.store.select(i.d),this.store.select(i.e).subscribe(function(e){e&&e.length&&(r.toastyService.clearAll(),r.toastyService.error({title:"Login Error",msg:"Invalid Credentials"}))}),this.redirectIfUserLoggedIn()}return e.prototype.ngOnInit=function(){this.initForm()},e.prototype.socialLogin=function(e){var t={data:e,socialLogin:!0};this.store.dispatch(new d.d(t))},e.prototype.onSubmit=function(){var e=this.signInForm.value,t={data:e,socialLogin:!1};console.log("user object",e),this.store.dispatch(new c.b("")),this.store.dispatch(new d.d(t))},e.prototype.initForm=function(){var e,t;this.signInForm=this.fb.group({email:[e,a.Validators.required],password:[t,a.Validators.required]})},e.prototype.redirectIfUserLoggedIn=function(){var e=this;this.authStatus$.subscribe(function(t){1==t&&e.router.navigateByUrl("/dashboard")})},e=u([n.i(r.Component)({selector:"tr-login",template:n(1504),changeDetection:r.ChangeDetectionStrategy.OnPush,styles:[n(1477)]}),f("design:paramtypes",["function"==typeof(t="undefined"!=typeof a.FormBuilder&&a.FormBuilder)&&t||Object,"function"==typeof(p="undefined"!=typeof s.a&&s.a)&&p||Object,"function"==typeof(m="undefined"!=typeof o.Router&&o.Router)&&m||Object,"function"==typeof(g="undefined"!=typeof l.a&&l.a)&&g||Object])],e);var t,p,m,g}()},1412:function(e,t,n){"use strict";var i=n(85),o=n(84),r=n(31),s=n(0),a=n(5),l=n(18),c=n(1441);n.d(t,"a",function(){return f});var d=this&&this.__decorate||function(e,t,n,i){var o,r=arguments.length,s=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(r<3?o(s):r>3?o(t,n,s):o(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},u=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(e,t,n,i){this.fb=e,this.router=t,this.store=n,this.authService=i,this.authStatus$=this.store.select(o.d),this.formErrorMessage$=this.store.select(o.f),this.redirectIfUserLoggedIn()}return e.prototype.ngOnInit=function(){this.initForm()},e.prototype.initForm=function(){var e="",t="",n="",i="";this.signUpForm=this.fb.group({name:[e,a.Validators.required],email:[t,[a.Validators.required]],password:[n,a.Validators.required],password_confirmation:[i,[a.Validators.required]]},{validator:c.a})},e.prototype.onSubmit=function(){var e=this;this.authService.signUp({user:this.signUpForm.value}).subscribe(function(t){e.router.navigateByUrl("/login")},function(e){console.log("error registered is",e)})},e.prototype.redirectIfUserLoggedIn=function(){var e=this;this.authStatus$.subscribe(function(t){1==t&&e.router.navigateByUrl("/trips")})},e=d([n.i(s.Component)({selector:"tr-signup",template:n(1505),changeDetection:s.ChangeDetectionStrategy.OnPush,styles:[n(1478)]}),u("design:paramtypes",["function"==typeof(t="undefined"!=typeof a.FormBuilder&&a.FormBuilder)&&t||Object,"function"==typeof(f="undefined"!=typeof l.Router&&l.Router)&&f||Object,"function"==typeof(p="undefined"!=typeof r.a&&r.a)&&p||Object,"function"==typeof(m="undefined"!=typeof i.a&&i.a)&&m||Object])],e);var t,f,p,m}()},1440:function(e,t,n){"use strict";var i=n(18),o=n(1411),r=n(1412);n.d(t,"a",function(){return a});var s=[{path:"",redirectTo:"login",pathMatch:"full"},{path:"login",component:o.a},{path:"signup",component:r.a}],a=i.RouterModule.forChild(s)},1441:function(e,t,n){"use strict";function i(e){var t=e.get("password"),n=e.get("password_confirmation");return t.value&&n.value?t.value===n.value?null:{nomatch:!0}:null}t.a=i},1477:function(e,t){e.exports=".fixwidth{width:200px !important}.center-aligned{text-align:center}.login-text{margin-bottom:1rem}.center-line{position:relative;margin:25px 0}.center-line .text{position:absolute;top:-10px;left:47%;background-color:#fafafa;padding:0 2px}\n"},1478:function(e,t){e.exports=".error{color:red}.signup-text{text-align:center;margin-bottom:1rem}\n"},1504:function(e,t){e.exports='<div class="ui middle aligned center aligned grid">\n  <div class="sixteen wide column"></div>\n  <div class="sixteen wide column"></div>\n  <div class="">\n    <div class="login-text text-center">\n      <h2 class="ui teal image header">\n        <div class="content">\n          Log-in\n        </div>\n      </h2>\n    </div>\n\n    <form class="ui form text-center">\n      <div class="two fields">\n        <div class="field">\n          <button type="button" class="ui google plus button fixwidth" (click)="socialLogin(\'google\')">\n            <i class="google plus icon"></i>\n            Google login\n          </button>\n        </div>\n        <div class="field">\n          <button type="button" class="ui facebook button fixwidth" (click)="socialLogin(\'facebook\')">\n            <i class="facebook icon"></i>\n            Facebook login\n          </button>\n        </div>\n      </div>\n    </form>\n    \n    <div class="ui divider center-line">\n      <p class="text">or</p>\n    </div>\n\n    <form class="ui medium form" [formGroup]="signInForm" (ngSubmit)="onSubmit()">\n      <div class="ui stacked segment">\n        <div class="field">\n          <div class="ui left icon input">\n            <i class="user icon"></i>\n            <input type="text" name="email" placeholder="E-mail address" formControlName="email" autocomplete="off">\n          </div>\n        </div>\n        <div class="field">\n          <div class="ui left icon input">\n            <i class="lock icon"></i>\n            <input type="password" name="password" placeholder="Password" formControlName="password" autocomplete="off">\n          </div>\n        </div>\n        <button type="submit" class="ui fluid large teal submit button">Sign in</button>\n      </div>\n    </form>\n\n    <div class="ui message text-center">\n      New to Yatrum? <a [routerLink]="[\'/auth/signup\']">Sign Up</a>\n    </div>\n  </div>\n</div>'},1505:function(e,t){e.exports='<div class="ui middle aligned center aligned grid">\n  <div class="sixteen wide column"></div>\n  <div class="sixteen wide column"></div>\n  <div class="sixteen wide column">\n    <div class="signup-text text-center">\n      <h2 class="ui teal image header">\n        <div class="content">\n          Sign Up\n        </div>\n      </h2>\n    </div>\n    <form class="ui medium form" [formGroup]="signUpForm" (ngSubmit)="onSubmit()">\n      <div class="ui stacked segment">\n        <div class="field"\n          [ngClass]="{\'has-error\': (signUpForm.get(\'name\').invalid && signUpForm.get(\'name\').touched)}">\n          <!--<label for="name" class="col-sm-2 control-label">Name</label>-->\n          <!--<div class="col-sm-4">-->\n            <input type="text" \n              class="form-control" \n              id="name" \n              placeholder="Name"\n              formControlName="name">\n            <span class="error" *ngIf="signUpForm.get(\'name\').invalid && signUpForm.get(\'name\').touched && signUpForm.get(\'name\').hasError(\'required\') "> \n              Name is required\n            </span>\n          <!--</div>-->\n          \n        </div>\n        <div class="field"\n          [ngClass]="{\'has-error\': (signUpForm.get(\'email\').invalid && signUpForm.get(\'email\').touched)}">\n          <!--<label for="email" class="col-sm-2 control-label">Email</label>-->\n          <!--<div class="col-sm-4">-->\n            <input type="email" \n              class="form-control" \n              id="email" \n              placeholder="Email"\n              formControlName="email">\n            <span class="error" *ngIf="signUpForm.get(\'email\').invalid && signUpForm.get(\'email\').touched && signUpForm.get(\'email\').hasError(\'required\') "> \n              <!--&& signUpForm.get(\'name\').touched) && signUpForm.get(\'name\').hasError(\'required\')">-->\n              Email is required\n            </span>\n          <!--</div>-->\n          \n        </div>\n        <div class="field"\n          [ngClass]="{\'has-error\': (signUpForm.get(\'password\').invalid && signUpForm.get(\'password\').touched)}">\n          <!--<label for="inputPassword3" class="col-sm-2 control-label">Password</label>-->\n          <!--<div class="col-sm-4">-->\n            <input type="password" \n              class="form-control" \n              id="password" \n              placeholder="Password"\n              formControlName="password">\n            <span class="error" *ngIf="signUpForm.get(\'password\').invalid && signUpForm.get(\'password\').touched && signUpForm.get(\'password\').hasError(\'required\')">\n              Can\'t be empty\n            </span>\n          <!--</div>-->\n        </div>\n        <div class="field"\n          [ngClass]="{\'has-error\': (signUpForm.get(\'password_confirmation\').invalid && signUpForm.get(\'password_confirmation\').touched)}">\n          <!--<label for="inputPassword3" class="col-sm-2 control-label">Password Confirmation</label>-->\n          <!--<div class="col-sm-4">-->\n            <input type="password" \n              class="form-control" \n              id="password_confirmation" \n              placeholder="Password again"\n              formControlName="password_confirmation">\n            <span *ngIf="signUpForm.get(\'password_confirmation\').touched && signUpForm.hasError(\'nomatch\')">\n              Password should match\n            </span>\n            <span class="error" *ngIf="signUpForm.get(\'password_confirmation\').invalid && signUpForm.get(\'password_confirmation\').touched && signUpForm.get(\'password_confirmation\').hasError(\'required\')">\n              Can\'t be empty\n            </span>\n          <!--</div>-->\n        </div>\n        <div class="error" *ngIf="(formErrorMessage$ | async)?.length > 0" class="has-error col-sm-offset-2">\n          <label>\n            {{ formErrorMessage$ | async }}\n          </label>\n        </div>\n\n        <div class="field">\n          <button type="submit" class="ui fluid large teal submit button">Sign Up</button>\n        </div>\n      </div>  \n    </form>\n    <div class="ui message">\n      Already have an account? <a [routerLink]="[\'/login\']">Sign In</a>\n    </div>\n  </div>\n</div>'}});
//# sourceMappingURL=6.f0cab5863662c9614709.bundle.map