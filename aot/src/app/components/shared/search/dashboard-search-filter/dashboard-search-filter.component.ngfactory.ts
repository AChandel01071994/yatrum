/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../src/app/components/shared/search/dashboard-search-filter/dashboard-search-filter.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './dashboard-search-filter.component.scss.shim.ngstyle';
import * as import10 from '../../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import11 from '../../../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import12 from '../../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/forms/src/directives/ng_model';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_DashboardSearchFilterComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DashboardSearchFilterComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.DashboardSearchFilterComponent();
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_searchQuery(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.searchQuery = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.keywordEntered.subscribe(_eventHandler.bind(view,'keywordEntered'))); }
  }
}
var renderType_DashboardSearchFilterComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_DashboardSearchFilterComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DashboardSearchFilterComponent>;
  _DashboardSearchFilterComponent_0_3:Wrapper_DashboardSearchFilterComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DashboardSearchFilterComponent_Host0,renderType_DashboardSearchFilterComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'tr-dashboard-search-filter',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DashboardSearchFilterComponent0(this.viewUtils,this,0,this._el_0);
    this._DashboardSearchFilterComponent_0_3 = new Wrapper_DashboardSearchFilterComponent();
    this.compView_0.create(this._DashboardSearchFilterComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._DashboardSearchFilterComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DashboardSearchFilterComponent) && (0 === requestNodeIndex))) { return this._DashboardSearchFilterComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DashboardSearchFilterComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DashboardSearchFilterComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DashboardSearchFilterComponentNgFactory:import8.ComponentFactory<import0.DashboardSearchFilterComponent> = new import8.ComponentFactory<import0.DashboardSearchFilterComponent>('tr-dashboard-search-filter',View_DashboardSearchFilterComponent_Host0,import0.DashboardSearchFilterComponent);
const styles_DashboardSearchFilterComponent:any[] = [import9.styles];
var renderType_DashboardSearchFilterComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_DashboardSearchFilterComponent,{});
export class View_DashboardSearchFilterComponent0 extends import2.AppView<import0.DashboardSearchFilterComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _DefaultValueAccessor_4_3:import10.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _NgModel_4_5:import11.Wrapper_NgModel;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import12.Wrapper_NgControlStatus;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DashboardSearchFilterComponent0,renderType_DashboardSearchFilterComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','ui form'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','ui huge icon action input'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'input',new import3.InlineArray4(4,'placeholder','Search for destinations, activities or people','type','text'),(null as any));
    this._DefaultValueAccessor_4_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import13.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._DefaultValueAccessor_4_3.context];
    this._NgModel_4_5 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._NgModel_4_5.context;
    this._NgControlStatus_4_7 = new import12.Wrapper_NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray2(2,'class','ui huge icon blue button'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'i',new import3.InlineArray2(2,'class','search icon'),(null as any));
    this._text_9 = this.renderer.createText(this._el_6,'\n    ',(null as any));
    this._text_10 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_11 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray8(8,'ngModelChange',(null as any),'keyup.enter',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_4));
    this._NgModel_4_5.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._text_11
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.DefaultValueAccessor) && (4 === requestNodeIndex))) { return this._DefaultValueAccessor_4_3.context; }
    if (((token === import15.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import16.NgModel) && (4 === requestNodeIndex))) { return this._NgModel_4_5.context; }
    if (((token === import17.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import18.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_1_0:any = this.context.searchQuery;
    this._NgModel_4_5.check_model(currVal_4_1_0,throwOnChange,false);
    this._NgModel_4_5.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.checkHost(this,this,this._el_4,throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_4_5.ngOnDestroy();
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_4_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.searchQuery = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keyup.enter')) {
      const pd_sub_1:any = ((<any>this.context.onSearch()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}