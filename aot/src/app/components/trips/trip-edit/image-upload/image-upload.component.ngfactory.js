/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../../../../src/app/components/trips/trip-edit/image-upload/image-upload.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../../../../src/app/services/cloudinary-integration.service';
import * as import9 from 'ng2-slim-loading-bar/src/slim-loading-bar.service';
import * as import10 from './image-upload.component.scss.shim.ngstyle';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/element_ref';
export var Wrapper_ImageUploadComponent = (function () {
    function Wrapper_ImageUploadComponent(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.ImageUploadComponent(p0, p1, p2);
    }
    Wrapper_ImageUploadComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ImageUploadComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ImageUploadComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_ImageUploadComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ImageUploadComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ImageUploadComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.imageData.subscribe(_eventHandler.bind(view, 'imageData')));
        }
    };
    return Wrapper_ImageUploadComponent;
}());
var renderType_ImageUploadComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_ImageUploadComponent_Host0 = (function (_super) {
    __extends(View_ImageUploadComponent_Host0, _super);
    function View_ImageUploadComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ImageUploadComponent_Host0, renderType_ImageUploadComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_ImageUploadComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'tr-image-upload', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ImageUploadComponent0(this.viewUtils, this, 0, this._el_0);
        this._ImageUploadComponent_0_3 = new Wrapper_ImageUploadComponent(this.injectorGet(import8.CloudinaryIntegrationService, this.parentIndex), this.injectorGet(import9.SlimLoadingBarService, this.parentIndex), this.renderer);
        this.compView_0.create(this._ImageUploadComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ImageUploadComponent_0_3.context);
    };
    View_ImageUploadComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ImageUploadComponent) && (0 === requestNodeIndex))) {
            return this._ImageUploadComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ImageUploadComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ImageUploadComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ImageUploadComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._ImageUploadComponent_0_3.ngOnDestroy();
    };
    View_ImageUploadComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ImageUploadComponent_Host0;
}(import1.AppView));
export var ImageUploadComponentNgFactory = new import7.ComponentFactory('tr-image-upload', View_ImageUploadComponent_Host0, import0.ImageUploadComponent);
var styles_ImageUploadComponent = [import10.styles];
var renderType_ImageUploadComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_ImageUploadComponent, {});
export var View_ImageUploadComponent0 = (function (_super) {
    __extends(View_ImageUploadComponent0, _super);
    function View_ImageUploadComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ImageUploadComponent0, renderType_ImageUploadComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckOnce);
        this._expr_7 = import12.UNINITIALIZED;
    }
    View_ImageUploadComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_fileInput_0 = new import11.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'input', new import3.InlineArray4(4, 'multiple', '', 'type', 'file'), null);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_2 = import3.createRenderElement(this.renderer, parentRenderNode, 'span', new import3.InlineArray2(2, 'class', 'ui card add-photo'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n	', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'i', new import3.InlineArray2(2, 'class', 'add circle icon'), null);
        this._text_5 = this.renderer.createText(this._el_2, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'change', null), this.eventHandler(this.handleEvent_0));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_2));
        this._viewQuery_fileInput_0.reset([new import13.ElementRef(this._el_0)]);
        this.context.fileInput = this._viewQuery_fileInput_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_ImageUploadComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_7 = true;
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementProperty(this._el_0, 'hidden', currVal_7);
            this._expr_7 = currVal_7;
        }
    };
    View_ImageUploadComponent0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'change')) {
            var pd_sub_0 = (this.context.handleOnChange($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_ImageUploadComponent0.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.showImageBrowseDlg() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ImageUploadComponent0;
}(import1.AppView));
//# sourceMappingURL=image-upload.component.ngfactory.js.map